# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: BaniBani CI/CD

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build -x test
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: team2server
        path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
        - name: Download artifact
          uses: actions/download-artifact@v2
          with:
            name: team2server
        - name: Run
          env:
            PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            HOST: ${{ secrets.SERVER_IP }}
            USER: ${{ secrets.SERVER_USER }}
          run: |
            mkdir -p ~/.ssh
            ssh-keyscan $HOST >> ~/.ssh/known_hosts
            echo "$PRIVATE_KEY" > private_key.pem
            chmod 600 private_key.pem
            FILENAME="team2server_$(date +%y%m%d_%H_%M)"
            scp -i private_key.pem *.jar $USER@$HOST:~/$FILENAME.jar
            ssh -i private_key.pem $USER@$HOST "sudo fuser -k 8080/tcp"
            ssh -i private_key.pem $USER@$HOST "sudo nohup java -jar ~/$FILENAME.jar --spring.profiles.active=prod >> ~/nohup.out 2>&1 &"
